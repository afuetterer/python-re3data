name: Test

on:
  workflow_call:

# Set permissions at the job level.
permissions: {}

env:
  PYTHONUNBUFFERED: 1
  FORCE_COLOR: 1

jobs:
  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install pre-requisites (e.g. hatch)
      run: python -m pip install --require-hashes --requirement=requirements/ci
    - name: Run test suite
      run: hatch run cov
      env:
        TERM: dumb # keep rich from printing escape sequences, which made testing CLI outputs messy
    - name: Generate coverage report
      run: |
        export TOTAL_COV=$(hatch run cov-total)
        echo "TOTAL_COV=$TOTAL_COV" >> $GITHUB_ENV
        hatch run cov-report-markdown
        echo "### Total coverage: ${TOTAL_COV}%" >> $GITHUB_STEP_SUMMARY
        cat coverage.md >> $GITHUB_STEP_SUMMARY
      if: matrix.python-version == '3.12'
    - name: Generate coverage badge
      uses: schneegans/dynamic-badges-action@e9a478b16159b4d31420099ba146cdc50f134483 # v1.7.0
      with:
        # GIST_TOKEN is a GitHub personal access token with scope "gist".
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: adc66df152c473c1aa136557ee8181ca
        filename: coverage-badge.json
        label: Coverage
        namedLogo: python
        message: ${{ env.TOTAL_COV }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.TOTAL_COV }}
      # only update coverage badge
      # when push to main branch of the project -> not in forks
      if: >-
        env.TOTAL_COV
        && github.repository == 'afuetterer/python-re3data'
        && github.ref == 'refs/heads/main'

  dev-setup:
    # Ref: structlog (MIT License) <https://github.com/hynek/structlog/blob/main/.github/workflows/ci.yml>
    name: Install [dev] on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: '3.12'
        cache: pip
    - run: python -Im pip install --editable .[dev]
    - run: python -Ic 'import re3data; print(re3data.__version__)'
    - run: re3data --version
    - name: Set up pipdeptree
      if: matrix.os == 'ubuntu-latest'
      run: python -m pip install --require-hashes --requirement=requirements/ci
    - name: Write info to step summary
      if: matrix.os == 'ubuntu-latest'
      run: |
        {
          echo -e "### âœ“ All dependencies installed successfully\n\n"
          echo '<details><summary>Installed Python packages (dependency tree)</summary>'
          echo -e "\n\`\`\`console"
          echo "$ python -m pipdeptree --packages=python-re3data"
          python -m pipdeptree --packages=python-re3data
          echo -e "\`\`\`\n</details>"
          echo '<details><summary>Outdated Python packages</summary>'
          echo -e "\n\`\`\`console"
          echo "$ python -m pip list --outdated"
          python -m pip list --outdated
          echo -e "\`\`\`\n</details>"
        } >> $GITHUB_STEP_SUMMARY

  build-inspect:
    name: Build and inspect the package
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: hynek/build-and-inspect-python-package@b4fc3f6ba2b3da04f09659be99e2a29fb6146a61 # v2.6.0

  docker:
    name: Build and run the docker image
    runs-on: ubuntu-24.04
    env:
      NO_COLOR: 1
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - run: pipx install hatch
    - name: Get package version
      id: package-version
      run: echo "version=$(hatch version)" >> $GITHUB_OUTPUT
    - uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
    - name: Build and push
      uses: docker/build-push-action@15560696de535e4014efeff63c48f16952e52dd1 # v6.2.0
      with:
        load: true
        tags: afuetterer/python-re3data:test
        build-args: VERSION=${{ steps.package-version.outputs.version }}
    - run: docker run --rm afuetterer/python-re3data:test --help
