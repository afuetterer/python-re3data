# hatch
# Ref: https://hatch.pypa.io/latest/config/metadata/
# ------------------------------------------------------------------------------

[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[project]
name = "python-re3data"
version = "0.10.0"
description = "The Pythonic client for the re3data API."
readme = "README.md"
keywords = [
  "api",
  "api-client",
  "metadata",
  "re3data",
  "repositories",
  "research data",
]
license = "MIT"
license-files = [ "LICENSE" ]
authors = [
  { name = "Heinz-Alexander FÃ¼tterer" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 1 - Planning",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Text Processing :: Markup :: XML",
  "Typing :: Typed",
]
dependencies = [
  "httpx>=0.27",
  "xsdata>=24.5",
]
optional-dependencies.all = [
  "python-re3data[cli,csv]",
]
optional-dependencies.cli = [
  "typer>=0.12",
]
optional-dependencies.csv = [
  "pandas>=2",
]
urls.Changelog = "https://github.com/afuetterer/python-re3data/blob/main/CHANGELOG.md"
urls.Documentation = "https://afuetterer.github.io/python-re3data"
urls.Issues = "https://github.com/afuetterer/python-re3data/issues"
urls.Repository = "https://github.com/afuetterer/python-re3data.git"
scripts.re3data = "re3data.__main__:app"

[dependency-groups]
dev = [
  "pre-commit-uv",
  "python-re3data[all]",
  "toml-cli",
]
test = [
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-mock",
  "pytest-randomly",
  "pytest-recording",
  "pytest-xdist",
  "respx",
]
docs = [
  "mike",
  "mkdocs",
  "mkdocs-include-markdown-plugin",
  "mkdocs-material",
  "mkdocs-minify-plugin",
  "mkdocstrings[python]",
]

[tool.hatch.build.targets.sdist]
only-include = [
  "src/re3data",
]
exclude = [
  "src/re3data/_resources/*.md",
  "src/re3data/_resources/*.xml",
]

[tool.hatch.build.targets.wheel]
only-packages = true
packages = [
  "src/re3data",
]

[tool.ruff] # Ref: https://docs.astral.sh/ruff/configuration/
line-length = 120
src = [
  "src",
  "tests",
]
# Ref: https://docs.astral.sh/ruff/settings/#format
format.docstring-code-format = true
# Ref: https://docs.astral.sh/ruff/rules/
lint.extend-select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
  "D",    # pydocstyle
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "PERF", # perflint-perf
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
lint.ignore = [
  "D105", # undocumented-magic-method
  "D107", # undocumented-public-init
]
lint.per-file-ignores."src/re3data/_resources/*.py" = [
  "D101",   # undocumented-public-class
  "D106",   # undocumented-public-nested-class
  "D205",   # blank-line-after-summary
  "D415",   # ends-in-punctuation
  "TCH002", # typing-only-third-party-import
]
lint.per-file-ignores."tests/**.py" = [
  "D",       # pydocstyle
  "PLR2004", # magic-value-comparison
]
lint.isort.known-first-party = [
  "re3data",
]
lint.pydocstyle.convention = "google"

[tool.repo-review] # Ref: https://github.com/scientific-python/cookie/tree/main#list-of-checks
ignore = [
  # PC is Pre-commit
  "PC111", # blacken-docs
  "PC160", # codespell
  "PC170", # pygrep hooks
  "PC180", # prettier
  "PY007", # supports an easy task runner - we use "just"
  "RTD",   # read the docs
]

[tool.pytest.ini_options] # Ref: https://docs.pytest.org/en/stable/customize.html
minversion = "8.0"
addopts = [
  "-ra",
  "--showlocals",
  "--strict-markers",
  "--strict-config",
]
asyncio_mode = "auto"
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
xfail_strict = true
testpaths = "tests"

[tool.coverage.run] # Ref: https://coverage.readthedocs.io/en/latest/config.html
branch = true
parallel = true
source = [
  "re3data",
]
omit = [
  "__main__.py",
]

[tool.coverage.report]
exclude_also = [
  "if TYPE_CHECKING:",
  "@overload",
]
fail_under = 90
show_missing = true
skip_covered = true
skip_empty = true

[tool.mypy] # Ref: https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
python_version = "3.10"
strict = true
pretty = true
show_column_numbers = true
show_error_context = true
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
warn_unreachable = true

[tool.uv]
default-groups = [ "dev", "test" ]

[tool.licensecheck] # Ref: https://github.com/FHPythonUtils/LicenseCheck/#example-1-pyprojecttoml
using = "PEP631"
format = "ansi"

[tool.unasyncd] # Ref: https://github.com/provinzkraut/unasyncd?tab=readme-ov-file#configuration
add_editors_note = true
ruff_fix = true
ruff_format = true
transform_docstrings = true

[tool.unasyncd.files]
"src/re3data/_client/_async.py" = "src/re3data/_client/_sync.py"
"tests/integration/test_async_client.py" = "tests/integration/test_client.py"

[tool.unasyncd.add_replacements]
"AsyncClient" = "Client"
"re3data.AsyncClient" = "re3data.Client"
"async_client" = "client"
"async_log_response" = "log_response"
"httpx.AsyncClient" = "httpx.Client"
"AsyncRepositoryManager" = "RepositoryManager"

[tool.semantic_release] # Ref: https://python-semantic-release.readthedocs.io/en/latest/configuration.html#settings
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
commit_message = "chore: release {version}\n\nAutomatically generated by python-semantic-release [skip ci]"
major_on_zero = false
tag_format = "{version}"
version_toml = [
  "pyproject.toml:project.version",
]
build_command = '''
sed -i "s/^version: .*/version: $NEW_VERSION/" CITATION.cff
sed -i "s/^date-released: .*/date-released: $(date "+%Y-%m-%d")/" CITATION.cff
sed -i "s|/compare/[0-9]*\.[0-9]*\.[0-9]*...main|/compare/$NEW_VERSION...main|" CHANGELOG.md
git add CHANGELOG.md CITATION.cff
'''
changelog.mode = "update"
changelog.insertion_flag = "<!-- releases -->"
changelog.template_dir = ".github/templates"
changelog.exclude_commit_patterns = [ "^build", "^chore", "^style", "^ci" ]
changelog.environment.keep_trailing_newline = false

[tool.typos] # Ref: https://github.com/crate-ci/typos/blob/master/docs/reference.md
# add "spellchecker:disable-line" to ignore specific lines
default.extend-ignore-re = [
  "(?Rm)^.*# spellchecker:disable-line$",
]
